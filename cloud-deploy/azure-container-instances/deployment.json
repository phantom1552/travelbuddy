{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerGroupName": {
      "type": "string",
      "defaultValue": "ai-trip-checklist-api",
      "metadata": {
        "description": "Name for the container group"
      }
    },
    "containerImage": {
      "type": "string",
      "defaultValue": "REGISTRY.azurecr.io/ai-trip-checklist-api:latest",
      "metadata": {
        "description": "Container image to deploy"
      }
    },
    "groqApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Groq API key"
      }
    },
    "secretKey": {
      "type": "securestring",
      "metadata": {
        "description": "Application secret key"
      }
    },
    "allowedOrigins": {
      "type": "string",
      "defaultValue": "https://yourdomain.com",
      "metadata": {
        "description": "Allowed CORS origins"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-09-01",
      "name": "[parameters('containerGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "containers": [
          {
            "name": "ai-trip-checklist-api",
            "properties": {
              "image": "[parameters('containerImage')]",
              "ports": [
                {
                  "port": 8000,
                  "protocol": "TCP"
                }
              ],
              "environmentVariables": [
                {
                  "name": "ENVIRONMENT",
                  "value": "production"
                },
                {
                  "name": "DEBUG",
                  "value": "false"
                },
                {
                  "name": "LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "WORKERS",
                  "value": "4"
                },
                {
                  "name": "GROQ_API_KEY",
                  "secureValue": "[parameters('groqApiKey')]"
                },
                {
                  "name": "SECRET_KEY",
                  "secureValue": "[parameters('secretKey')]"
                },
                {
                  "name": "ALLOWED_ORIGINS",
                  "value": "[parameters('allowedOrigins')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGB": 1
                },
                "limits": {
                  "cpu": 1,
                  "memoryInGB": 2
                }
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/health/live",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 30,
                "timeoutSeconds": 5,
                "failureThreshold": 3
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/health/ready",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "failureThreshold": 3
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "Always",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "port": 8000,
              "protocol": "TCP"
            }
          ],
          "dnsNameLabel": "[parameters('containerGroupName')]"
        }
      }
    }
  ],
  "outputs": {
    "containerIPv4Address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('containerGroupName'))).ipAddress.ip]"
    },
    "containerFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('containerGroupName'))).ipAddress.fqdn]"
    }
  }
}